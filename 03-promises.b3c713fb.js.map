{"mappings":"gfACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,UAAWJ,SAASC,cAAc,WA4BpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACPH,EACFF,EAAS,CAACH,WAAUC,WAEnBG,GAAO,W,OAAMK,QAAQC,IAAI,CAACV,WAAUC,aACpCQ,QAAQC,IAAIT,UAlCjBT,EAAKM,UAAUa,iBAAiB,SAAS,SAACC,GACxCA,EAAMC,iBAKN,IAJA,IAAIC,EAASC,OAAOvB,EAAKK,YAAYmB,OACjCC,EAAQF,OAAOvB,EAAKC,WAAWuB,OAC/BE,EAAOH,OAAOvB,EAAKI,UAAUoB,OAExBG,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EAErDV,QAAQC,IAAI,OAAQQ,GACpBT,QAAQC,IAAI,QAASO,GAErBlB,EAAcoB,EAAUF,GACvBG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBX,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAE9DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBX,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,UAG9DgB,GAAQC,K","sources":["src/js/03-promises.js"],"sourcesContent":["//import Notiflix from \"notiflix\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n}\n\nrefs.submitBtn.addEventListener('click', (event) => {\n  event.preventDefault();\n  let amount = Number(refs.inputAmount.value);\n  let delay = Number(refs.inputDelay.value);\n  let step = Number(refs.inputStep.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n\n    console.log('step', step);\n    console.log('delay', delay);\n  \n    createPromise(position, delay)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  \n  delay +=step;\n\n}\n  \n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n  if (shouldResolve) {\n    resolve ({position, delay});\n  } else {\n     reject(() => console.log({position, delay}))\n     console.log(delay);\n  }\n  })\n})\n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","addEventListener","event","preventDefault","amount","Number","value","delay1","step","position1","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b3c713fb.js.map"}